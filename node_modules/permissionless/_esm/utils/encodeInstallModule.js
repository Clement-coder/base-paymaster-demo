import { encodeFunctionData, getAddress } from "viem";
import { parseModuleTypeId } from "../actions/erc7579/supportsModule.js";
import { AccountNotFoundError } from "../errors/index.js";
export function encodeInstallModule(parameters) {
    const account = parameters.account;
    if (!account) {
        throw new AccountNotFoundError({
            docsPath: "/docs/actions/wallet/sendTransaction"
        });
    }
    const modules = Array.isArray(parameters.modules)
        ? parameters.modules
        : [parameters.modules];
    return modules.map(({ type, address, context, initData }) => ({
        to: account.address,
        value: BigInt(0),
        data: encodeFunctionData({
            abi: [
                {
                    name: "installModule",
                    type: "function",
                    stateMutability: "nonpayable",
                    inputs: [
                        {
                            type: "uint256",
                            name: "moduleTypeId"
                        },
                        {
                            type: "address",
                            name: "module"
                        },
                        {
                            type: "bytes",
                            name: "initData"
                        }
                    ],
                    outputs: []
                }
            ],
            functionName: "installModule",
            args: [
                parseModuleTypeId(type),
                getAddress(address),
                context ?? initData
            ]
        })
    }));
}
//# sourceMappingURL=encodeInstallModule.js.map